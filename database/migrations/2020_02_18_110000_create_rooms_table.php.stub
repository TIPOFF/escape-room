<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
use Tipoff\EscapeRoom\Models\Rate;
use Tipoff\EscapeRoom\Models\Supervision;
use Tipoff\EscapeRoom\Models\Theme;

class CreateRoomsTable extends Migration
{
    public function up()
    {
        Schema::create('rooms', function (Blueprint $table) {
            $userModel = config('tipoff.model_class.user');
            $userTable = (new $userModel)->getTable();

            $locationModel = config('tipoff.model_class.location');
            $locationTable = (new $locationModel)->getTable();

            $imageModel = config('tipoff.model_class.image');
            $imageTable = (new $imageModel)->getTable();

            $themeTable = (new Theme)->getTable();

            $rateTable = (new Rate)->getTable();

            $supervisionTable = (new Supervision)->getTable();

            $table->id();
            $table->foreignId('location_id')->index()->references('id')->on($locationTable);
            $table->foreignId('theme_id')->index()->references('id')->on($themeTable);
            $table->foreignId('rate_id')->index()->references('id')->on($rateTable); // Default pricing rate structure for the room. Can be ovveridden by schedules & slots.
            $table->foreignId('supervision_id')->references('id')->on($supervisionTable);
            $table->date('opened_at');
            $table->date('closed_at')->nullable();
            $table->unsignedTinyInteger('participants'); // Max amount of participants for public games
            $table->unsignedTinyInteger('participants_private'); // Max amount of participants for private games
            $table->unsignedTinyInteger('reset_time'); // Time needed to reset the room in minutes. Can be 15 min on some of the newer rooms.
            $table->unsignedTinyInteger('occupied_time'); // Minutes. Used for scheduling & slot conflicts. Defaults to theme->occupied_time but this allows each room to have a custom time.
            $table->unsignedTinyInteger('priority'); // Used to order the themes on the market page
            $table->text('note')->nullable(); // Shown on website. Internal notes may be made in admin panel.
            $table->string('title')->nullable(); // Override of theme title on Market page if needed
            $table->text('excerpt')->nullable(); // Override of theme excerpt on Market page if needed
            $table->text('description')->nullable(); // Override of theme description on Market page if needed
            $table->foreignId('image_id')->nullable()->references('id')->on($imageTable);
            $table->foreignId('poster_image_id')->nullable()->references('id')->on($imageTable); // Override of theme poster on Market page if needed

            $table->foreignId('creator_id')->references('id')->on($userTable);
            $table->foreignId('updater_id')->references('id')->on($userTable);
            $table->timestamps();
        });
    }
}
